{"version":3,"file":"yarn.js","sourceRoot":"","sources":["../../src/loader/yarn.ts"],"names":[],"mappings":"AAAA,OAAO,EAAgB,KAAK,EAAE,MAAM,eAAe,CAAC;AACpD,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AACnC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,IAAI,MAAM,mBAAmB,CAAC;AAErC,MAAM,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;AAE3D,MAAM,CAAC,MAAM,uBAAuB,GAAG,KAAK,IAAI,EAAE;IAChD,MAAM,iBAAiB,GAAG,MAAM,iBAAiB,EAAE,CAAC;IACpD,IAAI,CAAC,iBAAiB,EAAE;QACtB,MAAM,eAAe,EAAE,CAAC;KACzB;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,KAAK,IAAI,EAAE;IAC1C,IAAI;QACF,MAAM,IAAI,CAAC,eAAe,CAAC,CAAC;KAC7B;IAAC,MAAM;QACN,OAAO,KAAK,CAAC;KACd;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,KAAK,IAAI,EAAE,CACxC,WAAW,CAAC,MAAM,EAAE,CAAC,SAAS,EAAE,aAAa,EAAE,mBAAmB,CAAC,EAAE;IACnE,GAAG,EAAE,IAAI;IACT,KAAK,EAAE,SAAS;IAChB,WAAW,EAAE,IAAI;CAClB,CAAC,CAAC;AAEL,MAAM,WAAW,GAAG,CAClB,OAAe,EACf,IAAuB,EACvB,OAAqB,EACN,EAAE,CACjB,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;IAC9B,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IAC5C,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAC1B,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC","sourcesContent":["import { SpawnOptions, spawn } from \"child_process\";\nimport { stat } from \"fs/promises\";\nimport path from \"path\";\nimport root from \"../common/root.js\";\n\nconst nodeModulesPath = path.resolve(root, \"node_modules\");\n\nexport const ensurePackagesInstalled = async () => {\n  const shouldSkipInstall = await nodeModulesExists();\n  if (!shouldSkipInstall) {\n    await installPackages();\n  }\n};\n\nexport const nodeModulesExists = async () => {\n  try {\n    await stat(nodeModulesPath);\n  } catch {\n    return false;\n  }\n  return true;\n};\n\nexport const installPackages = async () =>\n  spawnSimple(\"yarn\", [\"install\", \"--immutable\", \"--immutable-cache\"], {\n    cwd: root,\n    stdio: \"inherit\",\n    windowsHide: true,\n  });\n\nconst spawnSimple = (\n  command: string,\n  args: readonly string[],\n  options: SpawnOptions,\n): Promise<void> =>\n  new Promise((resolve, reject) => {\n    const child = spawn(command, args, options);\n    child.on(\"error\", reject);\n    child.on(\"close\", resolve);\n  });\n"]}